{"version":3,"file":"static/js/759.6888e8ba.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.jsx","pages/Movies.jsx","services/getTrendingMovies.jsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MovieItem = ({ id, title, location }) => {\n  return (\n    <li key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        {title}\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;","import MovieItem from '../components/MovieItem/MovieItem';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovieSearch } from '../services/getTrendingMovies';\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const location = useLocation();\n    const [MovieSearch, setMovieSearch] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\n        'Something went wrong! Try again later'\n    );\n\n    const query = searchParams.get('query');\n\n    useEffect(() => {\n        if (!query) return;\n        async function fetchMovieSearch() {\n            try {\n                setIsLoading(true);\n                const mSearch = await getMovieSearch(query);\n                setMovieSearch(mSearch);\n            } catch (error) {\n                setError(true);\n                setErrorMessage(error.message);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        fetchMovieSearch();\n        \n    }, [query]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const searchValue = e.currentTarget.elements.searchMovie.value;\n        setSearchParams({ query: searchValue });\n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    <input\n                        name=\"searchMovie\"\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movies...\"\n                        required\n                    />\n                </label>\n                <button type=\"submit\">Search</button>\n            </form>\n            <section>\n                {error && (\n                    <div>\n                        <p>{errorMessage}</p>\n                    </div>\n                )}\n                {isLoading && (\n                    <div>\n                        <p>Loading...</p>\n                    </div>\n                )}\n                <ul>\n                    {MovieSearch !== 0 &&\n                        MovieSearch.map(movie => {\n                            return (\n                                <MovieItem\n                                    key={movie.id}\n                                    title={movie.title}\n                                    id={movie.id}\n                                    location={location}\n                                />\n                            );\n                        })}\n                </ul>\n            </section>\n        </>\n    );\n};\n\nexport default Movies;","import axios from \"axios\";\n\nconst token = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmYTY1NjY4NTgxZDM2MDViNjI3YmJkNTA1M2MwZjc4YiIsInN1YiI6IjY1NjFmM2QyN2RmZGE2NTkzMTc0NGM4MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.mJ_NpdJlCksB6aHfkEKZ1GCpPJcq2S1fKYHXkm3OMn0';\n\nconst authAxios = axios.create({\n  headers: {\n    Authorization: `Bearer ${token}`,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await authAxios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US'\n  );\n\n  return data;\n};\n\nexport const getMovie = async movieId => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}`\n  );\n\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits`\n  );\n  return data.cast;\n};\n\nexport const getReview = async movieId => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews`\n  );\n\n  return data.results;\n};\n\nexport const getMovieSearch = async movieName => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${movieName}`\n  );\n\n  return data.results;\n};\n"],"names":["_ref","id","title","location","_jsx","children","Link","state","from","to","concat","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","useLocation","_useState","useState","_useState2","MovieSearch","setMovieSearch","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useState7","_useState8","errorMessage","setErrorMessage","query","get","useEffect","_fetchMovieSearch","_asyncToGenerator","_regeneratorRuntime","_callee","mSearch","_context","prev","next","getMovieSearch","sent","t0","message","finish","stop","apply","arguments","fetchMovieSearch","_jsxs","_Fragment","onSubmit","e","preventDefault","searchValue","currentTarget","elements","searchMovie","value","name","type","autoComplete","autoFocus","placeholder","required","map","movie","MovieItem","authAxios","axios","headers","Authorization","getTrendingMovies","_yield$authAxios$get","data","abrupt","getMovie","_ref2","_callee2","movieId","_yield$authAxios$get2","_context2","_x","getCast","_ref3","_callee3","_yield$authAxios$get3","_context3","cast","_x2","getReview","_ref4","_callee4","_yield$authAxios$get4","_context4","results","_x3","_ref5","_callee5","movieName","_yield$authAxios$get5","_context5","_x4"],"sourceRoot":""}